s = 'dageheqwghqwehwghweqrhenłąąśżźżęęęb'
print(s)

c = s[0:2]
print(c)
c = s[2:4]
print(c)
c = s[:4]
print(c)
c = s[:4]
print(c)

s2 = s[2:4] + s[-4:]
print(s2)

s1 = 'sgsgsg\\sfg\n\n\nwsw\tghw\tg\t5'
print(s1)

s2 = r'sgsgsg\\sfg\n\n\nwsw\tghw\tg\t5'
print(s2)

a = 10
s2 = f'a=\t{a}'
print(s2)

s3 = "sgsgsg\\sfg\n\n\nwsw\tghw\tg\t5"
print(s3)

s4 = "I can't"
print(s4)

s5 = 'He said "Yes"'
print(s5)

s6 = "He said \"Yes\""
print(s5)

s4 = 'I can\'t'
print(s4)

print('-----------------')
s5 = 'a={}'
print(s5.format(a))


print('-----------------')
s6 = ('The characters generated by these codes are identical to those defined by the ASCII'
      ' standard and the ISO 8859-1 standard, the latter also known as Latin-1. This makes '
      'it easy to convert material that’s coded using a western-based character set, often '
      'known as Roman, into Unicode form.')


s7 = """
The characters generated by these codes are identical to those defined by the ASCII 
standard and the ISO 8859-1 standard, the latter also known as Latin-1. This makes it 
easy to convert material that’s coded using a western-based character set, often known
 as Roman, into Unicode form."""

print(s6)
print('----------')
print(s7)

print(s7.find('Thgwgwrg'))
print(s7.find('ISO'))

print(s7.index('Th'))
# print(s7.index('Thgwgwrg'))
print(s7.rindex('Th'))

print('----------')
print(s7.count('the'))


